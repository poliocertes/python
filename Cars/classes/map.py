# -- map file --
import pygame as pg
from classes.settings import *

_ = False
board_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, 1, 1, 1, _, _, 1],
    [1, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, 1],
    [1, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, 1, _, _, _, 1, 1, _, _, 1, 1, 1, 1],
    [1, _, _, _, 1, _, _, _, 1, 1, _, _, 1, _, _, 1],
    [1, 1, 1, 1, 1, _, _, _, 1, 1, _, _, 1, _, _, 1],
    [1, _, _, _, 1, 1, _, _, _, _, _, _, 1, _, _, 1],
    [1, 1, _, _, _, 1, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1],
    [1, _, _, 1, _, _, 1, _, _, 1, 1, _, _, 1, 1, 1],
    [1, _, _, 1, _, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, 1, _, _, 1, _, _, _, 1],
    [1, _, _, 1, _, _, _, _, 1, _, _, 1, _, _, _, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
] 

second_board_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, 1, 1, 1, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, 1, 1, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, 1, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1],
    [1, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1],
    [1, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, 1, 1],
    [1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1],
    [1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1],
    [1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1],
    [1, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1],
    [1, _, _, 1, _, _, 1, _, _, 1, 1, _, _, _, 1, 1],
    [1, _, _, 1, _, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, 1, 1, _, _, 1, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, _, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
] 


class Map:
    def __init__(self):
        self.board_map = board_map
        self.world_map = {}
        self.rows = len(self.board_map)
        self.cols = len(self.board_map[0])
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.board_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        [pg.draw.rect(screen, 'black', (pos[0] * 50, pos[1] * 50, BLOCK_SIZE, BLOCK_SIZE), 2)
         for pos in self.world_map]
